plugins {
    id 'nu.studer.plugindev' version '4.1'

    // Should come along with plugindev, but plugindev uses an old version
    // id 'com.jfrog.bintray' version '1.8.5'

    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.20.0"
}

apply plugin: 'groovy'

dependencies {
    implementation gradleApi()
    implementation localGroovy()
}

// This makes it easier to figure out issues with Travis CI builds
test {
    testLogging.showStandardStreams = true
}

apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    google()
}


/*dependencies {
    implementation 'org.apache.ant:ant:1.8.4'
    testImplementation 'junit:junit:4.11'
}*/


group='wang.dannyhe.tools'
version='0.0.8'

gradlePlugin {
    plugins {
        myPlugin {
            id = 'wang.dannyhe.tools.preprocessor'
            implementationClass = 'wang.dannyhe.tools.PreprocessorPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/dannyjiajia/gradle-java-preprocessor-plugin'
    vcsUrl = 'https://github.com/dannyjiajia/gradle-java-preprocessor-plugin'
    description = 'Gradle plugin that lets an Android project use antenna preprocess.'

    plugins {
        myPlugin {
            displayName = 'plugin'
        }
    }
}

/*plugindev {
    pluginId 'wang.dannyhe.tools.preprocessor'
    pluginName 'plugin'
    pluginImplementationClass 'wang.dannyhe.tools.PreprocessorPlugin'
    pluginDescription 'Gradle plugin that lets an Android project use antenna preprocess.'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'android', 'antenna',' preprocess'
    authorId 'dannyjiajia'
    authorName 'Danny He'
    authorEmail 'dannyjiajia@gmail.com'
    projectUrl 'https://github.com/dannyjiajia/gradle-java-preprocessor-plugin'
    projectInceptionYear '2016'
    done() // do not omit this
}*/

// we read the config infomation from "local.properties"
def Properties loadLocalProp() {
    def versionFile = new File(project.rootDir, 'local.properties')
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }
    return version
}

def localProp = loadLocalProp()
def BINTRAY_USER = localProp['BINTRAY_USER']
def BINTRAY_API_KEY = localProp['BINTRAY_API_KEY']

// If you want to upload this, make sure to set BINTRAY_USER and BINTRAY_API_KEY in local.properties
if (BINTRAY_USER && BINTRAY_API_KEY) {
    bintray {
        dryRun = false // Turn off when actually deploying
        publish = true // Maybe someday turn this on for auto-publishing

        user = "$BINTRAY_USER"
        key = "$BINTRAY_API_KEY"
        pkg {
            repo = 'gradle-plugins'
        }
    }
}